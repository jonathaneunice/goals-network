{
  "name": "goals-network",
  "tagline": "d3.js visualization showing goal clustering",
  "body": "### Goals Relationships\r\n\r\nThis project visualizes relationships from a real-world dataset, mapping studied *elements* to related *goals*. There are thousands of elements, and about a dozen goals. The total is 5,771 nodes in the full data. \r\n\r\nBeyond this particular set of relationships, this project demonstrates techniques typically needed to clean up \"dirty data\" prior to visualization, and to display it an an appealing fashion. \r\n\r\n<iframe src=\"https://jonathaneunice.github.io/goals-network/graph.html\" style=\"width: 90%\">\r\n\r\n#### How It Works\r\n\r\nBasic data cleanups are done in `csvclean.py`, in Python (using its wonderful [Pandas](http://pandas.pydata.org/) and [NumPy](http://www.numpy.org/) tools). Column names are sanitized, data are trimmed of excess spaces, and columns \r\nthat are known to be pointless are dropped. The script emits more hygienic CSV.\r\n\r\n`graph.js` does the heavy lifting, converting CSV into a JavaScript data structure suitable for the incomparable [d3.js](https://d3js.org/) and its force-directed graph layout.\r\n\r\nMuch of the visualization core is stock d3. But making things look \"right\" takes a little more work than just \"hey! d3! do your thing!\" Interesting aspects include:\r\n\r\n * The goal graphs are largely implied by, not explicit in, the data. \r\n   Goal nodes must be purposefully created and managed; they don't just \r\n   \"fall out of\" the input data.\r\n * Multiple classes/kinds of nodes. Goal nodes behave quite differently \r\n   from element nodes. E.g. they are explicitly placed, they are much larger,\r\n   they are custom-labeled. Those aspects need significant tending.\r\n * Making sure goal nodes are the focus of the visualization, and so they're\r\n   locked into the center of the display. They do eventually move toward their\r\n   associated element nodes, but only after the simulation has \"settled\" a bit.\r\n * The graph is typically rendered in a \"dark\" style (color on dark background), \r\n   which tends to highlight the subtler lines and smaller groupings that can be \r\n   easily \"washed out\" in a lighter rendering on-screen. Reversed images are \r\n   available for printing on paper, where the reproduction process is less prone \r\n   to overwhelming fine lines and color distinctions.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}